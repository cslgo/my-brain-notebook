<type>[optional scope]: <description>(try to keep under 50 characters)
##
#[optional body](try to keep under 72 characters)
##
#[optional footer(s)]
##
# The commit contains the following structural elements, to communicate intent to the consumers of your library:
# 1. fix: a commit of the type fix patches a bug in your codebase (this correlates with PATCH in Semantic Versioning).
# 2. feat: a commit of the type feat introduces a new feature to the codebase (this correlates with MINOR in Semantic Versioning).
# 3. BREAKING CHANGE: a commit that has a footer BREAKING CHANGE:, or appends a ! after the type/scope, introduces a breaking API change (correlating with MAJOR in Semantic Versioning). A BREAKING CHANGE can be part of commits of any type.
# 4. types other than fix: and feat: are allowed, for example, chore:, ci:, docs:, style:, refactor:, perf:, test:, ignore:, and others.
# 5. footers other than BREAKING CHANGE: <description> may be provided and follow a convention similar to git trailer format.
##